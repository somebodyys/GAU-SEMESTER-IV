}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:2) {
items <- sample(1:6, i, replace = T)
print(items)
if(length(as.set(items)) >= i){
counter <- counter + 1
}
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:2) {
items <- sample(1:6, i, replace = T)
print(items)
if(length(as.set(items)) >= i){
counter <- counter + 1
}
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:2) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) > i){
counter <- counter + 1
}
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:2) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) > i){
counter <- counter + 1
}
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:2) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(counter)
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(counter/20)
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
if(counter/10 == 100) {
print(i+1)
break
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
if(counter/10 == 100) {
print(i)
break
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
if(counter/10 == 100) {
print(i)
break
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
if(counter/10 == 100) {
print(i)
break
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
if(counter/10 == 100) {
print(i)
break
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
if(counter/10 == 100) {
print(i)
break
}
print(counter/10)
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
if(counter/10 == 100) {
print(paste("Sucess on Roll :",i))
break
}
print(paste("Percent :", counter/10))
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
if(counter/10 == 100) {
print(paste0("Sucess on Roll :",i))
break
}
print(paste0("Percent : ", counter/10,"%"))
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent", i," : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:15, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:15, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:15, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:3, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:3, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:8, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:10, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:11, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/20,"%"))
if(counter/20 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/20,"%"))
if(counter/20 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/20,"%"))
if(counter/20 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/20,"%"))
if(counter/20 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:10000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/100,"%"))
if(counter/100 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
setwd("D:/University/GAU-SEMESTER-IV/R2/Quiz")
stroopData <- read_xls("stroop.xls")
stem.leaf.backback(
stroopData$colors[stroopData$gender == 1],
stroopData$colors[stroopData$gender == 2]
)
library(aplpack)
stem.leaf.backback(
stroopData$colors[stroopData$gender == 1],
stroopData$colors[stroopData$gender == 2]
)
stroopData <- read_xls("stroop.xls")
stem.leaf.backback(
stroopData$colors[stroopData$gender == 1],
stroopData$colors[stroopData$gender == 2]
)
stroopData <- read_xls("stroop.xls")
library(readxl)
stroopData <- read_xls("stroop.xls")
stem.leaf.backback(
stroopData$colors[stroopData$gender == 1],
stroopData$colors[stroopData$gender == 2]
)
setwd("D:/University/GAU-SEMESTER-IV/R2/ClassWork10")
myData <- read_xls("sat.xls")
myData <- read_xls("sat.xls")
View(myData)
formula <- lm(myData$univ_GPA~myData$high_GPA)
plot(
myData$high_GPA,
myData$univ_GPA,
xlab = "High School GPA",
ylab = "University overall GPA"
)
abline(formula)
cor(myData$high_GPA, myData$univ_GPA)
formula <- lm(myData$univ_GPA~myData$high_GPA)
coef(formula)
coeficients <- data.frame(coef(formula))$coef.formula.
coeficients
result <- coeficients[2] * 2.2 + coeficients[1]
result
cor(myData$math_SAT, myData$verb_SAT)
cor(myData$comp_GPA, myData$univ_GPA)
meanOvar <- mean(myData$univ_GPA)
meanComp <- mean(myData$comp_GPA)
meanOvar
meanComp
t.test(myData$univ_GPA, myData$comp_GPA, paired = T, alternative = "less")
t.test(myData$univ_GPA, myData$comp_GPA, paired = T)
totalMeanVector <- (myData$math_SAT + myData$verb_SAT)/2
totalMeanVector
plot(
myData$univ_GPA~totalMeanVector
)
abline(lm(myData$univ_GPA~totalMeanVector))
lm(myData$univ_GPA~totalMeanVector)
lm(myData$univ_GPA~totalMeanVector)
summary(lm(myData$univ_GPA~totalMeanVector))
prediction <- 0.005475 * mean(c(600, 540)) - 0.171606
prediction
iter <- 2.949144 + c(-1, 1) * 0.0005743 * qt(0.975, length(myData$univ_GPA - 1))
iter
