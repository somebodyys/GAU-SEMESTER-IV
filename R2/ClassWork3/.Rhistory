?pt
setwd("T:/University/GAU-SEMESTER-IV/R2/ClassWork2")
myData <- read.csv("HouseholdData.csv")
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 30
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
lines(x=(result[,1]+result[,2])/2,
y=1:iterations,
col="purple")
legend("bottomright",
legend=c("Failed", "Population Mean", "Caught","Sample Mean"),
col=c("red", "blue", "green", "purple"), lty=c(1,2,1,1), cex = 0.4)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 100
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
lines(x=(result[,1]+result[,2])/2,
y=1:iterations,
col="purple")
legend("bottomright",
legend=c("Failed", "Population Mean", "Caught","Sample Mean"),
col=c("red", "blue", "green", "purple"), lty=c(1,2,1,1), cex = 0.4)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
lines(x=(result[,1]+result[,2])/2,
y=1:iterations,
col="purple")
legend("bottomright",
legend=c("Failed", "Population Mean", "Caught","Sample Mean"),
col=c("red", "blue", "green", "purple"), lty=c(1,2,1,1), cex = 0.4)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
lines(x=(result[,1]+result[,2])/2,
y=1:iterations,
col="purple")
legend("bottomright",
legend=c("Failed", "Population Mean", "Caught","Sample Mean"),
col=c("red", "blue", "green", "purple"), lty=c(1,2,1,1), cex = 0.4)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
lines(x=(result[,1]+result[,2])/2,
y=1:iterations,
col="purple")
legend("bottomright",
legend=c("Failed", "Population Mean", "Caught","Sample Mean"),
col=c("red", "blue", "green", "purple"), lty=c(1,2,1,1), cex = 0.4)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
lines(x=(result[,1]+result[,2])/2,
y=1:iterations,
col="purple")
legend("bottomright",
legend=c("Failed", "Population Mean", "Caught","Sample Mean"),
col=c("red", "blue", "green", "purple"), lty=c(1,2,1,1), cex = 0.4)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
lines(x=(result[,1]+result[,2])/2,
y=1:iterations,
col="purple")
legend("bottomright",
legend=c("Failed", "Population Mean", "Caught","Sample Mean"),
col=c("red", "blue", "green", "purple"), lty=c(1,2,1,1), cex = 0.4)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
lines(x=(result[,1]+result[,2])/2,
y=1:iterations,
col="purple")
legend("bottomright",
legend=c("Failed", "Population Mean", "Caught","Sample Mean"),
col=c("red", "blue", "green", "purple"), lty=c(1,2,1,1), cex = 0.4)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
confidence <- 50
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
confidence <- 50
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
confidence <- 50
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
confidence <- 50
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
confidence <- 50
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
confidence <- 50
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
confidence <- 50
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
confidence <- 50
tail <- (1 - confidence/100)/2 + confidence /100
result <- matrix(ncol = 2)
size <- 9
iterations <- 50
for (i in 1:iterations) {
picked <- sample(myData$age, size)
result <- rbind(result, mean(picked) + c(-1,1) * (qt(tail, size - 1)* sd(picked))/sqrt(size))
}
result <- result[-1,]
#plotting
plot(1, type="n", xlab="", ylab="", xlim=c(20, 80), ylim=c(1, iterations))
segments(x0=result[,1],
x1=result[,2],
y0=1:iterations,
y1=1:iterations,
col = ifelse(mean(myData$age) >= result[,1] & mean(myData$age) <= result[,2], "green", "red"))
abline(v=mean(myData$age), col="blue", lty=5,lwd=2)
points(x=(result[,1]+result[,2])/2,
y=1:iterations,
cex=0.6,
col="purple")
რესულტ
result
setwd("T:/University/GAU-SEMESTER-IV/R2/ClassWork3")
myData <- read.csv("fl_student_survey.csv")
myData
View(myData)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
size <- length(myData$TV)
result <- mean(myData$TV) + c(-1,1) * (qt(tail, size - 1)* sd(myData$t))/sqrt(size)
result
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
size <- length(myData$TV)
myData <- read.csv("fl_student_survey.csv")
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
size <- length(myData$TV)
tail
size
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
size <- length(myData$TV)
result <- mean(myData$TV) + c(-1,1) * (qt(tail, size - 1)* sd(myData$TV))/sqrt(size)
result
LAD <- myData[myData$life_after_death == "y"]
LAD <- myData$life_after_death[myData$life_after_death == "y"]
length(LAD)
length(LAD)/length(myData$life_after_death)
myData <- read.csv("fl_student_survey.csv")
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
size <- length(myData$life_after_death)
LAD <- myData$life_after_death[myData$life_after_death == "y"]
proportion <- length(LAD)/length(myData$life_after_death)
result <- proportion + c(-1, 1) * qnorm(tail) * sqrt(proportion * (1- proportion)/size)
result
proportion
#data
myData <- read.csv("fl_student_survey.csv")
View(myData)
m <- 4
x_ <- mean(myData$political_ideology)
t <- (x_ - 4)/(sd(myData$political_ideology)/sqrt(length(myData$political_ideology)))
t
myData <- read.csv("fl_student_survey.csv")
m <- 4
x_ <- mean(myData$political_ideology)
size <- length(myData$political_ideology)
t <- (x_ - 4)/(sd(myData$political_ideology)/sqrt(size))
result <- ifelse(t <= 0, qt(t,size - 1)*2, 2*(1-qt(t, size - 1)))
x_
size
t
qt(-abs(t), size - 1) * 2
?qt
qt(-4.576584,59)
qt(-4.576584)
qt(-4.576584,60)
qt(-4.576584,20)
result <- ifelse(t <= 0, pt(t,size - 1)*2, 2*(1-pt(t, size - 1)))
result
qt(t, size - 1)
pt(t, size - 1)
1 - pt(t, size - 1)
size <- length(myData$abortion_legalize)
proportion <- length(myData$abortion_legalize[myData$abortion_legalize == "y"])/size
proportion
