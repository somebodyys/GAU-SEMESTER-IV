FastPower <- function(base, expont){
if(expont == 0){
return 1
} else{
if(expont % 2 == 1){
return base * FastPower(base * base, (expont-1)/2)
}else{
return FastPower(base*base,expont/2)
}
}
}
FastPower <- function(base, expont){
if(expont == 0){
return 1
} else{
if(expont % 2 == 1){
return base * FastPower(base * base, (expont-1)/2)
}else{
return FastPower(base*base,expont/2)
}
}
}
FastPower <- function(base, expont){
if(expont == 0){
return(1)
} else{
if(expont % 2 == 1){
return(base * FastPower(base * base, (expont-1)/2))
}else{
return(FastPower(base*base,expont/2))
}
}
}
5 % 2
5 %% 2
FastPower <- function(base, expont){
if(expont == 0) return(1)
if(expont %% 2 == 1) return(base * FastPower(base*base, (expont - 1)/2))
return(FastPower(base*base, expont/2))
}
FastPower(2,5)
FastPower(3,3)
interval <- c(5.573, 11.427)
result <- (interval[2] - interval[1])/2
resutl
result
x1 <- 29.0
x2 <- 38.4
s1 <- 18.8
s2 <- 16.2
n1 <- 312
n2 <- 265
t <- (x1 - x2)/sqrt(s1^2 / n1 + s2^2 / n2)
t
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
1 - pt(t,v)
pt(t,v)
x1 <- 40 #a route
s1 <- 3
x2 <- 43 #b route
s2 <- 2
n1 <- 20
n2 <- 20
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
interval <- (x2 - x1) + c(-1,1) * qt(tail, v) * sqrt(s1^2 / n1 + s2^2 / n2)
interval
n1 <- 28
n2 <- 24
x1 <- 72.75
x2 <- 72.625
median1 <- 73
median2 <- 73
s1 <- 5.37225
s2 <- 7.69987
range1 <- 20
range2 <- 29
confidence <- 90
tail <- (1 - confidence/100)/2 + confidence /100
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
interval <- (x2 - x1) + c(-1,1) * qt(tail, v) * sqrt(s1^2 / n1 + s2^2 / n2)
interval
children <- c(40.3, 55, 45.7, 43.3, 50.3, 45.9, 53.5,43,
44.2, 44, 47.4, 44, 33.6, 55.1, 48.8, 50.4, 37.8, 60.3, 46.6)
adult <- c(20, 30.2, 2.2, 7.5, 4.4, 22.2, 16.6, 14.5,
21.4, 3.3, 6.6, 7.8, 10.6, 16.2, 14.5, 4.1, 15.8, 4.1, 2.4, 3.5,
8.5, 10, 1, 4.4, 1.3, 8.1, 4.7, 18.4)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
x1 <- mean(children)
x2 <- mean(adult)
s1 <- sd(children)
s2 <- sd(adult)
n1 <- length(children)
n2 <- length(adult)
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
interval <- (x1 - x2) + c(-1,1) * qt(tail, v) * sqrt(s1^2 / n1 + s2^2 / n2)
inteval
interval
t <- (x1 - x2)/sqrt(s1^2 / n1 + s2^2 / n2)
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
n1 <- 26
n2 <- 22
x1 <- 5.07
x2 <- 6.58
s1 <- 1.84
s2 <- 2.91
t <- (x1 - x2)/sqrt(s1^2 / n1 + s2^2 / n2)
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
t
n1 <- 26
n2 <- 22
x1 <- 5.07
x2 <- 6.58
s1 <- 1.84
s2 <- 2.91
t <- (x1 - x2)/sqrt(s1^2 / n1 + s2^2 / n2)
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
result <- ifelse(t <= 0, pt(t,v)*2, 1 - pt(t,v))
result
v
t
n1 <- 28
n2 <- 24
x1 <- 72.75
x2 <- 72.625
median1 <- 73
median2 <- 73
s1 <- 5.37225
s2 <- 7.69987
range1 <- 20
range2 <- 29
confidence <- 90
tail <- (1 - confidence/100)/2 + confidence /100
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
interval <- (x2 - x1) + c(-1,1) * qt(tail, v) * sqrt(s1^2 / n1 + s2^2 / n2)
interval
n1 <- 26
n2 <- 22
x1 <- 5.07
x2 <- 6.58
s1 <- 1.84
s2 <- 2.91
t <- (x1 - x2)/sqrt(s1^2 / n1 + s2^2 / n2)
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
result <- ifelse(t <= 0, pt(t,v)*2, (1 - pt(t,v))*2)
result
t
v
pt(t,v)
1- pt(t,v)
n1 <- 630
x1 <- n1 * 0.54
n2 <- 1010
x2 <- n2 * 0.51
p1 <- x1/n1
p2 <- x2/n2
confidence <- 90
tail <- (1 - confidence/100)/2 + confidence /100
result <- (p1 - p2) + c(-1, 1) * qnorm(tail) * sqrt((p1*(1-p1)/n1)+(p2*(1-p2)/n2))
result
#23
n1 <- 630
x1 <- n1 * 0.54
n2 <- 1010
x2 <- n2 * 0.51
p1 <- x1/n1
p2 <- x2/n2
prop1 <- 0.54
prop2 <- 0.51
p_bar <- ((prop1*n1) + (prop2*n2)) / (n1 + n2)
z <- (prop1 - prop2)/sqrt(p_bar*(1 - p_bar)*((1/n1)+(1/n2)))
z
result <- (1-pnorm(z))
result
setwd("D:/University/GAU-SEMESTER-IV/R2/ClassWork9")
a <- read.csv("fl_student_survey.csv")
View(a)
head(a)
boxplot(a$age~a$gender)
boxplot(a$age~a$life_after_death)
boxplot(a$age~a$abortion_legalize)
male <- a[a$gender == 'm',]
male
male <- subset(a, a$gender == 'm')
View(male)
install.packages("psych")
library(psych)
detach("package:psych", unload = TRUE)
library(psych)
detach("package:psych", unload = TRUE)
library(psych)
?psych
t.test(male$age,female$age)
female <- a[a$gender == 'f',]
t.test(male$age,female$age)
describe(male$age)
describe(female$age)
hist( male$age
, breaks= 7, probability= TRUE,
ylim= c(0,0.1), xlim= c(18,80), col= "cornflowerblue",
xlab="male")
curve(dnorm(x, mean= mean(male$age), sd= sqrt(var(male$age))), add= TRUE)
hist(female$age, breaks= 7, probability= TRUE,
ylim= c(0,0.1), xlim= c(18,80), col= "cornflowerblue",
xlab="female")
curve(dnorm(x, mean= mean(female$age), sd= sqrt(var(female$age))), add= TRUE)
ks.test(male$age, "pnorm", mean(male$age), sqrt(var(male$age)))
shapiro.test(male$age)
qqnorm(male$age,main="QQ plot of normal data",pch=19)
qqline(male$age)
wilcox.test(male$age, female$age)
?wilcox.test
wilcox.test(male$age)
wilcox.test(male$age, female$age)
wilcox.test(male$age~female$age)
wilcox.test(male$age, female$age)
boxplot(a$age~a$gender)
View(male)
maleNormalized <- male[male$age >= 50,]
View(maleNormalized)
maleNormalized <- male[male$age < 50,]
View(maleNormalized)
hist(maleNormalized$age)
boxplot(maleNormalized$age)
shapiro.test(maleNormalized$age)
hist(maleNormalized$age)
hist(maleNormalized$age, probability = T)
curve(dnorm(x, mean= mean(maleNormalized$age), sd= sqrt(var(maleNormalized$age))), add= TRUE)
install.packages("car")
library(car)
detach("package:psych", unload = TRUE)
leveneTest(male$age,female$age, center= mean)
?leveneTest
length(male$age)
length(female$age)
leveneTest(male$age,female$age[1:29], center= mean)
wilcox.test(male$age, female$age)
chickwts
boxplot(
chickwts$weight~chickwts$feed
)
chick.means
tapply(chickwts$weight, FUN = mean)
tapply(chickwts$weight, FUN = mean, INDEX = chickwts$feed)
mean(chickwts$weight[chickwts$feed == "casein"])
means <- tapply(chickwts$weight, FUN = mean, INDEX = chickwts$feed)
means
points(1:6,means,pch=4,cex=1.5)
points(1:6,means,pch=4,cex=1.5)
Figure
setwd("D:/University/GAU-SEMESTER-IV/R2/ClassWork6")
myData <- read.csv("25.csv")
View(myData)
shapiro.test(myData$Resident)
hist(myData$Resident)
shapiro.test(myData$Nonresident)
curve(dnorm(x, mean= mean(myData$Resident), sd= sqrt(var(myData$Resident))), add= TRUE)
hist(myData$Resident, probability = T)
curve(dnorm(x, mean= mean(myData$Resident), sd= sqrt(var(myData$Resident))), add= TRUE)
hist(myData$Nonresident, probability = T)
curve(dnorm(x, mean= mean(myData$Nonresident), sd= sqrt(var(myData$Nonresident))), add= TRUE)
myData <- read.csv("25.csv")
size <- length(myData$Institution)
pair_differences <- myData$Nonresident - myData$Resident
D_mean <- mean(pair_differences)
test_sd <- sd(pair_differences)
confidence <- 90
tail <- (1 - confidence/100)/2 + confidence /100
conf_inter <- D_mean + c(-1, 1) * qt(tail, size - 1) * test_sd / sqrt(size)
conf_inter
t.test(myData$Resident, myData$Nonresident)
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
conf_inter <- D_mean + c(-1, 1) * qt(tail, size - 1) * test_sd / sqrt(size)
conf_inter
t.test(myData$Nonresident, myData$Resident)
t.test(myData$Nonresident, myData$Resident, paired = T)
t.test(myData$Nonresident, myData$Resident, paired = T, alternative = "less")
t.test(myData$Nonresident, myData$Resident, paired = T, alternative = "more")
t.test(myData$Nonresident, myData$Resident, paired = T, alternative = "greater")
myData <- read_xls("weight.xls")
setwd("D:/University/GAU-SEMESTER-IV/R2/ClassWork6")
library(readxl)
myData <- read_xls("weight.xls")
View(myData)
normal <- myData$TIME[myData$WEIGHT == 1]
overweight <- myData$TIME[myData$WEIGHT == 2]
shapiro.test(normal)
shapiro.test(overweight)
hist(normal)
ks.test(normal, "pnorm", mean(normal), sd(normal))
?ks.test
myData <- read.csv("25.csv")
View(myData)
myData <- read.csv("26.csv")
View(myData)
shapiro.test(myData$Sexual.Image)
shapiro.test(myData$No.Sex)
?wilcox.test
wilcox.test(myData$Sexual.Image)
wilcox.test(myData$No.Sex)
