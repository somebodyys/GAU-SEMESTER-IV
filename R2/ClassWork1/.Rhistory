for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
if(counter/10 == 100) {
print(paste0("Sucess on Roll :",i))
break
}
print(paste0("Percent : ", counter/10,"%"))
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent", i," : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:15, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:15, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:15, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:3, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:3, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:8, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:10, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:11, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:5000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/50,"%"))
if(counter/50 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/20,"%"))
if(counter/20 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/20,"%"))
if(counter/20 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/20,"%"))
if(counter/20 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:2000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/20,"%"))
if(counter/20 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:10000) {
items <- sample(1:13, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/100,"%"))
if(counter/100 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
library(sets)
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(as.set(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
unique(c(1,5,5,11,4))
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(unique(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
for (i in 2:15) {
counter <- 0
for (j in 1:1000) {
items <- sample(1:6, i, replace = T)
if(length(unique(items)) < i){
counter <- counter + 1
}
}
print(paste0("Percent (", i,") : ", counter/10,"%"))
if(counter/10 == 100) {
print(paste0("Sucess on Roll : ",i))
break
}
}
4 + 2
setwd("D:/University/GAU-SEMESTER-IV/R2/Quiz")
#load animals
animalData <- read_xls('animals.xls')
#1 plotting Animal Research is Wrong
boxplot(
animalData$WRONG[animalData$GENDER == 1],
animalData$WRONG[animalData$GENDER == 2],
names = c("Female", "Male"),
horizontal = T,
main="Animal Research is wrong by gender",
xlab="Believe strength coeficient"
)
animalData <- read_xls('animals.xls')
#1 plotting Animal Research is Wrong
boxplot(
animalData$WRONG[animalData$GENDER == 1],
animalData$WRONG[animalData$GENDER == 2],
names = c("Female", "Male"),
horizontal = T,
main="Animal Research is wrong by gender",
xlab="Believe strength coeficient"
)
animalData <- read_xls('animals.xls')
install.packages("readxl")
100*length(animalData$WRONG[animalData$WRONG == 7 & animalData$GENDER == 1])/length(animalData$WRONG[animalData$GENDER == 1])
library(readxl)
#load animals
animalData <- read_xls('animals.xls')
#1 plotting Animal Research is Wrong
boxplot(
animalData$WRONG[animalData$GENDER == 1],
animalData$WRONG[animalData$GENDER == 2],
names = c("Female", "Male"),
horizontal = T,
main="Animal Research is wrong by gender",
xlab="Believe strength coeficient"
)
100*length(animalData$WRONG[animalData$WRONG == 7 & animalData$GENDER == 1])/length(animalData$WRONG[animalData$GENDER == 1])
mean(animalData$WRONG[animalData$GENDER == 1]) - mean(animalData$WRONG[animalData$GENDER == 2])
t.test(
animalData$WRONG[animalData$GENDER == 1],
animalData$WRONG[animalData$GENDER == 2]
)
boxplot(
animalData$NECESSAR[animalData$GENDER == 1],
animalData$NECESSAR[animalData$GENDER == 2],
names = c("Female", "Male"),
horizontal = T,
main="Animal Research is necessary by gender",
xlab="Believe strength coeficient"
)
100*length(animalData$NECESSAR[animalData$NECESSAR %in% c(1,2,3) & animalData$GENDER == 2])/length(animalData$NECESSAR[animalData$GENDER == 2])
t.test(
animalData$NECESSAR[animalData$GENDER == 1],
animalData$NECESSAR[animalData$GENDER == 2]
)
cor(
animalData$WRONG,
animalData$NECESSAR
)
plot(
animalData$WRONG,
animalData$NECESSAR,
xlab = "Wrong",
ylab = "Necessary",
col = ifelse(animalData$GENDER == 1, "green", "blue"),
pch = 19,
main="Correlation Between Wrong & Necessary"
)
abline(lm(animalData$NECESSAR~animalData$WRONG))
gc()
myData <- read.csv("fl_student_survey.csv")
#1
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
size <- length(myData$life_after_death)
LAD <- myData$life_after_death[myData$life_after_death == "y"]
proportion <- length(LAD)/length(myData$life_after_death)
result <- proportion + c(-1, 1) * qnorm(tail) * sqrt(proportion * (1- proportion)/size)
result[2] - result[1]
setwd("D:/University/GAU-SEMESTER-IV/R2/Quiz1")
myData <- read.csv("fl_student_survey.csv")
#1
confidence <- 95
tail <- (1 - confidence/100)/2 + confidence /100
size <- length(myData$life_after_death)
LAD <- myData$life_after_death[myData$life_after_death == "y"]
proportion <- length(LAD)/length(myData$life_after_death)
result <- proportion + c(-1, 1) * qnorm(tail) * sqrt(proportion * (1- proportion)/size)
result[2] - result[1]
confidence <- 90
tail <- (1 - confidence/100)/2 + confidence /100
size <- length(myData$abortion_legalize)
ABO <- myData$abortion_legalize[myData$abortion_legalize == "y"]
proportion <- length(ABO)/size
result <- proportion + c(-1, 1) * qnorm(tail) * sqrt(proportion * (1- proportion)/size)
result[2] - result[1]
confidence <- 90
tail <- (1 - confidence/100)/2 + confidence /100
size <- length(myData$college_GPA[myData$gender == "m"])
result <- (qt(tail, size - 1)* sd(myData$college_GPA[myData$gender == "m"]))/sqrt(size)
resut
result
m <- 5
x_ <- mean(myData$TV)
size <- length(myData$TV)
t <- (x_ - m)/(sd(myData$TV)/sqrt(size))
result <- ifelse(t <= 0, pt(t,size - 1), (1-pt(t, size - 1)))
result
size <- length(myData$life_after_death)
proportion <- length(myData$life_after_death[myData$life_after_death == "y"])/size
pi <- 0.4
z <- (proportion - pi)/sqrt(pi * (1 - pi)/size)
result <- ifelse(z <= 0, pnorm(z), (1-pnorm(z)))
result
setwd("D:/University/GAU-SEMESTER-IV/R2/ClassWork1")
myData <- read.csv("fl_students_survey.csv")
myData <- read.csv("fl_sudent_survey.csv")
myData <- read.csv("fl_student_survey.csv")
View(myData)
x1 <- mean(myData$age[myData$gender == "m"])
x2 <- mean(myData$age[myData$gender == "f"])
n1 <- length(myData$age[myData$gender == "m"])
n2 <- length(myData$age[myData$gender == "f"])
s1 <- sd(myData$age[myData$gender == "m"])
s2 <- sd(myData$age[myData$gender == "f"])
confidence <- 90
tail <- (1 - confidence/100)/2 + confidence /100
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
interval <- (x2 - x1) + c(-1,1) * qt(tail, v) * sqrt(s1^2 / n1 + s2^2 / n2)
interval
t.test(myData$age[myData$gender == "f"], myData$age[myData$gender == "m"], conf.level = 0.9, var.equal = T)
t.test(myData$age[myData$gender == "f"], myData$age[myData$gender == "m"], conf.level = 0.9)
myData <- read.csv("fl_student_survey.csv")
x1 <- mean(myData$age[myData$gender == "m"])
x2 <- mean(myData$age[myData$gender == "f"])
n1 <- length(myData$age[myData$gender == "m"])
n2 <- length(myData$age[myData$gender == "f"])
s1 <- sd(myData$age[myData$gender == "m"])
s2 <- sd(myData$age[myData$gender == "f"])
s <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / ((n1 - 1) + (n2 - 1) )
interval <- (x2 - x1) + c(-1, 1) * qt(tail, n1+n2 - 2) * sqrt(s * (1/n1 + 1/n2))
myData <- read.csv("fl_student_survey.csv")
x1 <- mean(myData$age[myData$gender == "m"])
x2 <- mean(myData$age[myData$gender == "f"])
n1 <- length(myData$age[myData$gender == "m"])
n2 <- length(myData$age[myData$gender == "f"])
s1 <- sd(myData$age[myData$gender == "m"])
s2 <- sd(myData$age[myData$gender == "f"])
confidence <- 90
tail <- (1 - confidence/100)/2 + confidence /100
s <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / ((n1 - 1) + (n2 - 1) )
interval <- (x2 - x1) + c(-1, 1) * qt(tail, n1+n2 - 2) * sqrt(s * (1/n1 + 1/n2))
interval
x2 <- mean(myData$age[myData$gender == "f"])
confidence <- 90
tail <- (1 - confidence/100)/2 + confidence /100
s <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / ((n1 - 1) + (n2 - 1) )
interval <- (x1 - x2) + c(-1, 1) * qt(tail, n1+n2 - 2) * sqrt(s * (1/n1 + 1/n2))
interval
myData <- read.csv("fl_student_survey.csv")
x1 <- mean(myData$age[myData$gender == "m"])
x2 <- mean(myData$age[myData$gender == "f"])
n1 <- length(myData$age[myData$gender == "m"])
n2 <- length(myData$age[myData$gender == "f"])
s1 <- sd(myData$age[myData$gender == "m"])
s2 <- sd(myData$age[myData$gender == "f"])
t <- (x1 - x2)/sqrt(s1^2 / n1 + s2^2 / n2)
v = ((s1^2/n1 + s2^2/n2)^2)/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
1 - pt(t,v)
t.test(myData$age[myData$gender == "m"], myData$age[myData$gender == "f"], alternative = "greater")
t.test(myData$college_GPA[myData$gender == "m"], myData$college_GPA[myData$gender == "f"], alternative = "less")
t.test(myData$high_sch_GPA[myData$gender == "m"], myData$high_sch_GPA[myData$gender == "f"], alternative = "less")
myData$gender[myData$gender == "m"]
myData$gender[myData$abortion_legalize == "y" & myData$gender == "m"]
px <- myData$gender[myData$abortion_legalize == "y" & myData$gender == "m"]/myData$gender[myData$gender == "m"]
px <- length(myData$gender[myData$abortion_legalize == "y" & myData$gender == "m"])/length(myData$gender[myData$gender == "m"])
px
table(myData$gender, myData$abortion_legalize)
27/29
21/29
table(myData$gender, myData$abortion_legalize)
prop.test(c(21, 26), c(29, 31), correct = F, alternative = "less")
table(myData$gender, myData$vegetarian)
prop.test(c(3, 6),c(29, 31), correct = F)
prop.test(c(21, 26), c(29, 31), correct = F, alternative = "less")
prop.test(c(3, 6),c(29, 31), correct = F)
